version: "3"

services:
  spring:
    build:
      context: ./spring-backend
      dockerfile: Dockerfile
    image: spring-server
    container_name: spring-lab5
    restart: always
    env_file:
      - .env
    networks:
      - my-network

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    image: nginx-server
    container_name: nginx-lab5
    restart: always
    volumes:
      - ./nginx/conf/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf/conf.d:/etc/nginx/conf.d
    ports:
      - 80:80
    networks:
      - my-network

  react:
    build:
      context: ./react-frontend
      dockerfile: Dockerfile
    image: react-client
    container_name: react-lab5
    restart: always
    volumes:
      - ./react-frontend/conf/nginx.conf:/etc/nginx/nginx.conf
      - ./react-frontend/conf/conf.d:/etc/nginx/conf.d
    env_file:
      - .env 
    networks:
      - my-network

  mysql-db:
    container_name: mysql-lab5
    image: mysql:8.0.36
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
    volumes:
      - db-data:/var/lib/mysql
    networks:
      - my-network

networks:
  my-network:
    driver: bridge

volumes:
  db-data:
